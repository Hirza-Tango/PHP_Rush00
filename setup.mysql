DROP DATABASE IF EXISTS RUSH00;
CREATE DATABASE RUSH00;
USE RUSH00;

CREATE TABLE USERS (
	USER_ID INT AUTO_INCREMENT PRIMARY KEY,
	USERNAME VARCHAR(255) UNIQUE NOT NULL,
	HASH CHAR(64) NOT NULL,
	FULL_NAME VARCHAR(255) NOT NULL,
	ADDRESS_LINE_1 VARCHAR(255) NOT NULL,
	ADDRESS_LINE_2 VARCHAR(255) NOT NULL,
	ADDRESS_CITY VARCHAR(255) NOT NULL,
	ADDRESS_POSTCODE CHAR(5) NOT NULL,
	PHONE CHAR(10) NOT NULL,
	CARD_NO CHAR(16) NOT NULL,
	CARD_OWNER VARCHAR(255) NOT NULL,
	CARD_EXPIRY DATE NOT NULL
);

CREATE TABLE CATEGORIES (
	CATEGORY_ID INT AUTO_INCREMENT PRIMARY KEY,
	CATEGORY_NAME VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE PRODUCTS (
	PRODUCT_ID INT AUTO_INCREMENT PRIMARY KEY,
	PRODUCT_NAME VARCHAR(255) UNIQUE NOT NULL,
	PRODUT_PRICE DECIMAL NOT NULL,
	PRODUCT_DESCRIPTION TEXT NULL,
	PRODUCT_IMAGE TEXT NULL
);

CREATE TABLE PRODUCT_CATEGORIES (
	PRODUCT_ID INT,
	CATEGORY_ID INT,
	PRIMARY KEY (PRODUCT_ID, CATEGORY_ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
	FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(CATEGORY_ID)
);

CREATE TABLE ORDERS (
	ORDER_ID INT AUTO_INCREMENT PRIMARY KEY,
	USER_ID INT NOT NULL,
	IS_VALIDATED BOOL NOT NULL DEFAULT FALSE,
	FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE BASKET_ITEMS (
	ORDER_ID INT NOT NULL,
	PRODUCT_ID INT NOT NULL,
	PRIMARY KEY (ORDER_ID, PRODUCT_ID),
	FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);